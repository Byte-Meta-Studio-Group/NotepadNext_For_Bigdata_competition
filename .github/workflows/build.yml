name: Build NPNBC

on:
  push:
    branches:
      - master

env:
  QT_RELEASE_VER: 6.5

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        config:
        - 
          qt_version: "5.15"
          modules: ""
        - 
          qt_version: "6.2"
          modules: "qt5compat"
        - 
          qt_version: "6.5"
          modules: "qt5compat"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.config.qt_version }}
          modules: ${{ matrix.config.modules }}
          cache: true

      - name: Get number of CPU cores
        if: runner.os != 'Windows'
        uses: SimenB/github-actions-cpu-cores@v2
        id: cpu-cores

      - name: Setup Visual Studio Tools
        if: runner.os == 'Windows'
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install jom
        if: runner.os == 'Windows'
        run: choco install jom

      - name: Setup Linux
        if: runner.os == 'Linux'
        run: |
          echo "DISTRIBUTION=NPNBC" >> "$GITHUB_ENV"
          sudo apt-get install libxkbcommon-dev libxkbcommon-x11-0 fuse libxcb-cursor-dev

      - name: Run QMake
        run: |
          mkdir build
          cd build
          qmake ../src/NotepadNext.pro "DISTRIBUTION=$DISTRIBUTION"

      - name: Compile for Windows
        if: runner.os == 'Windows' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          jom

      - name: Compile for Linux/macOS
        if: runner.os != 'Windows' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          make -j${{ steps.cpu-cores.outputs.count }}

      - name: Create Windows zip Package
        if: runner.os == 'Windows' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          jom package

      - name: Create Windows Installer
        if: runner.os == 'Windows' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          jom installer

      - name: Create DMG
        if: runner.os == 'macOS' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          make dmg

      - name: Create AppImage
        if: runner.os == 'Linux' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          make appimage

      - name: Upload Windows zip Package
        uses: actions/upload-artifact@v2
        if: runner.os == 'Windows' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        with:
          name: NPNBC-Windows-Qt${{ matrix.config.qt_version }}-Zip
          path: ${{ github.workspace }}/build/package/

      - name: Upload Windows Installer
        uses: actions/upload-artifact@v2
        if: runner.os == 'Windows' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        with:
          name: NPNBC-Windows-Qt${{ matrix.config.qt_version }}-Installer
          path: ${{ github.workspace }}/installer/NotepadNext*.exe

      - name: Upload macOS dmg
        uses: actions/upload-artifact@v2
        if: runner.os == 'macOS' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        with:
          name: NPNBC-macOS-Qt${{ matrix.config.qt_version }}
          path: ${{ github.workspace }}/build/NotepadNext/NotepadNext*.dmg

      - name: Upload Linux AppImage
        uses: actions/upload-artifact@v2
        if: runner.os == 'Linux' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        with:
          name: NPNBC-Linux-Qt${{ matrix.config.qt_version }}-AppImage
          path: ${{ github.workspace }}/build/NotepadNext/NotepadNext*.AppImage

  github:
    name: Draft GitHub Release
    runs-on: ubuntu-latest
    needs: [build]

    if: github.repository == 'Byte-Meta-Studio-Group/NotepadNext_For_Bigdata_competition'
    
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Create Draft Release
        run: |
          gh release create ${{ github.ref_name }} --title ${{ github.ref_name }} --generate-notes --draft

      - name: Download all artifacts
        uses: actions/download-artifact@v2

      - name: pack all data
        run: |
          mkdir ../package
          cp -r ./* ../package
          zip -q -r package.zip ../package/

      # The artifact is unzipped, so need to zip it back up so it can be uploaded
      - name: Upload All data
        run: |
          gh release upload package.zip
