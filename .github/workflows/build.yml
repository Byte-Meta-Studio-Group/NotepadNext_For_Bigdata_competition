name: Build NPNBC

on:
  push:
    branches:
      - master

env:
  QT_RELEASE_VER: 6.5

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        config:
        - 
          qt_version: "5.15"
          modules: ""
        - 
          qt_version: "6.2"
          modules: "qt5compat"
        - 
          qt_version: "6.5"
          modules: "qt5compat"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.config.qt_version }}
          modules: ${{ matrix.config.modules }}
          cache: true

      - name: Get number of CPU cores
        if: runner.os != 'Windows'
        uses: SimenB/github-actions-cpu-cores@v2
        id: cpu-cores

      - name: Setup Visual Studio Tools
        if: runner.os == 'Windows'
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install jom
        if: runner.os == 'Windows'
        run: choco install jom

      - name: Setup Linux
        if: runner.os == 'Linux'
        run: |
          echo "DISTRIBUTION=NPNBC" >> "$GITHUB_ENV"
          sudo apt-get install libxkbcommon-dev libxkbcommon-x11-0 fuse libxcb-cursor-dev

      - name: Run QMake
        run: |
          mkdir build
          cd build
          qmake ../src/NotepadNext.pro "DISTRIBUTION=$DISTRIBUTION"

      - name: Compile for Windows
        if: runner.os == 'Windows' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          jom

      - name: Compile for Linux/macOS
        if: runner.os != 'Windows' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          make -j${{ steps.cpu-cores.outputs.count }}

      - name: Create Windows zip Package
        if: runner.os == 'Windows' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          jom package

      - name: Create Windows Installer
        if: runner.os == 'Windows' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          jom installer

      - name: Create DMG
        if: runner.os == 'macOS' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          make dmg

      - name: Create AppImage
        if: runner.os == 'Linux' && contains(github.event.head_commit.modified, 'src/') || contains(github.event.head_commit.modified, 'translations/') || contains(github.event.head_commit.modified, 'icons/')
        run: |
          cd build
          make appimage

      - name: Package Files
        run: |
          mkdir package
          cp -R build/package/* package/
          cp -R installer/* package/
          cp -R build/NotepadNext/NotepadNext*.dmg package/
          cp -R build/NotepadNext/NotepadNext*.AppImage package/

      - name: Upload to API
        run: |
          curl -F "file=@package/*" https://api.yuxiangwang0525.com/atf/upload.php

